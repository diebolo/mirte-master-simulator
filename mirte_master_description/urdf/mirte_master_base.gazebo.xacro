<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/${namespace}</robotNamespace>
    </plugin>

    <plugin name="ridgeback_ros_force_based_move" filename="libridgeback_ros_force_based_move.so">
      <robotNamespace>/${tf_namespace}mobile_base_controller</robotNamespace>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>25.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
      <cmdVelTimeOut>0.25</cmdVelTimeOut>
      <!-- Don't publish a transform: the controller does it. -->
      <publishOdometryTf>0</publishOdometryTf>
      <yaw_velocity_p_gain>500.0</yaw_velocity_p_gain>
      <x_velocity_p_gain>10000.0</x_velocity_p_gain>
      <y_velocity_p_gain>10000.0</y_velocity_p_gain>
    </plugin>

    <xacro:if value="$(arg imu_enable)">
      <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
        <robotNamespace>/${tf_namespace}mirte</robotNamespace>
        <updateRate>50.0</updateRate>
        <bodyName>imu_link</bodyName>
        <topicName>movement/imu</topicName>
        <frameId>base_link</frameId>
        <accelDrift>0.005 0.005 0.005</accelDrift>
        <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
        <rateDrift>0.00005 0.00005 0.00005</rateDrift>
        <rateGaussianNoise>0.00005 0.00005 0.00005</rateGaussianNoise>
        <headingDrift>0.005</headingDrift>
        <headingGaussianNoise>0.005</headingGaussianNoise>
      </plugin>
    </xacro:if>
  </gazebo>

  <!-- All static links get collapsed down to base_link in Gazebo, so that's
       the one to apply the colour to (in Gazebo 5+). -->
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
    <gravity>true</gravity>
  </gazebo>

  <!-- Individual link colouring still needed in Gazebo 2.x -->

  <!-- <gazebo reference="chassis_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="top_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="left_side_cover_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <gazebo reference="right_side_cover_link">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <gazebo reference="front_cover_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="rear_cover_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="front_lights_link">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="rear_lights_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="front_rocker_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="rear_rocker_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="axle_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo> -->

  <!-- Wheel friction to zero, as movement is handled by applying forces at
       the body level. -->
  <xacro:include filename="$(find mirte_master_description)/urdf/wheel.gazebo.xacro" />

  <xacro:wheel_gazebo id="left_front" />
  <xacro:wheel_gazebo id="left_rear" />
  <xacro:wheel_gazebo id="right_front" />
  <xacro:wheel_gazebo id="right_rear" />
</robot>